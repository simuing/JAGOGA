
--SELECT USER
--FROM DUAL;
--==>> GAJA

--INDEX
--○ FUNCTION  예약상태 반환 - 은영
--○ PROCEDURE 숙소, 관련내용삭제 - 시우
--○ PROCEDURE 회원탈퇴처리 - 은영
--○ TRIGGER   회원탈퇴처리(안씀) - 진성
--○ PROCEDURE [전체회원알림] 회원가입 -유빈
--○ PROCEDURE [전체회원알림] 고객센터 문의관련
--○ PROCEDURE [전체회원알림] 관리자가 보낸 알림
--○ PROCEDURE [호스트알림] 내 숙소 신규등록
--○ PROCEDURE [호스트알림] 내 숙소 신규예약자
--○ PROCEDURE [호스트알림] 내 숙소 예약취소
--○ PROCEDURE [호스트알림] 내 숙소 검증 관련
--○ PROCEDURE [호스트알림] 내 숙소 문의 관련
--○ PROCEDURE [호스트알림] 내 숙소 후기 관련
--○ PROCEDURE [호스트알림] 내 숙소 비공개 관련
--○ PROCEDURE [게스트알림] 숙소예약 관련
--○ PROCEDURE [게스트알림] 숙소후기 관련
--○ PROCEDURE [게스트알림] 숙소문의 관련

------------------------------------------------------------------------------------------------------------------
--                                      ○ FUNCTION - 예약상태 반환
------------------------------------------------------------------------------------------------------------------
-- 예약상태 : (예약중/이용완료/숙박완료/게스트취소/호스트취소/관리자취소)
--○ 예약상태 반환 함수 생성(FN_BSTATE)
CREATE OR REPLACE FUNCTION FN_BSTATE (F_BCODE NUMBER) --예약코드
RETURN VARCHAR2
IS
    --주요변수지정
    V_RESULT    VARCHAR2(15);
    V_HMEMCODE  NUMBER; --해당숙소 호스트코드
    V_GMEMCODE  NUMBER; --해당숙소 게스트코드
    V_BYMEMCODE NUMBER; --취소신청 회원코드
    V_CHECKOUT    DATE; -- 체크아웃날짜
    UCOUNT      NUMBER; -- 이용내역 레코드 수
    CCOUNT      NUMBER; -- 취소신청 레코드 수
    BYMCOUNT    NUMBER; -- 회원취소 레코드 수
    BYACOUNT    NUMBER; -- 관리자취소 레코드 수
    
BEGIN
    -- 이용내역 레코드 수 담기
    SELECT COUNT(*)
    INTO UCOUNT
    FROM TBL_USEDLIST
    WHERE BCODE=F_BCODE;
    
    -- 체크아웃날짜 담기
    SELECT CHECKOUTDATE
    INTO V_CHECKOUT
    FROM TBL_BOOKING
    WHERE BCODE=F_BCODE;
    
    -- 취소신청 레코드 수 담기
    SELECT COUNT(*)
    INTO CCOUNT
    FROM TBL_CANCEL
    WHERE BCODE=F_BCODE;
    
    -- 회원취소 레코드 수 담기
    SELECT COUNT(*)
    INTO BYMCOUNT
    FROM  TBL_BYMEMBER BM LEFT JOIN TBL_CANCEL C
      ON BM.CANCELCODE = C.CANCELCODE
    WHERE BCODE=F_BCODE;
    
    -- 회원취소 아이디 받아오기
    SELECT HMEMCODE, GMEMCODE, BYMEMBERCODE
    INTO V_HMEMCODE, V_GMEMCODE, V_BYMEMCODE
    FROM VIEW_BOOKING
    WHERE BCODE=5;
    
    -- 관리자취소 레코드 수 담기
    SELECT COUNT(*)
    INTO BYACOUNT
    FROM TBL_BYADMIN BA LEFT JOIN TBL_CANCEL C
      ON BA.CANCELCODE = C.CANCELCODE
    WHERE C.BCODE = F_BCODE;
    
    -- COUNT 수에 따른 처리상태 구하기
    IF (UCOUNT=0 AND CCOUNT=0 AND V_CHECKOUT > SYSDATE) --이용내역, 취소내역이 없을 경우
        THEN V_RESULT := '예약중';
    ELSIF ( UCOUNT=1 )       -- 이용내역에 있을 경우 이용완료
        THEN V_RESULT := '이용완료';
    ELSIF ( CCOUNT=1 AND BYMCOUNT=0 AND BYACOUNT=0 ) -- 취소신청은 됐으나 처리완료전일 때
        THEN V_RESULT := '취소처리중';
    ELSIF ( BYACOUNT=1 ) -- 관리자에 의한 취소일 경우
        THEN V_RESULT := '관리자취소';
    ELSIF ( V_BYMEMCODE IS NOT NULL AND V_HMEMCODE = V_BYMEMCODE )
        THEN V_RESULT := '호스트취소';
    ELSIF ( V_BYMEMCODE IS NOT NULL AND V_GMEMCODE = V_BYMEMCODE )
        THEN V_RESULT := '게스트취소';
    ELSIF ( UCOUNT=0 AND V_CHECKOUT <= SYSDATE )
        THEN V_RESULT := '숙박완료';
        ELSE
            V_RESULT := '오류발생';
        END IF;
    RETURN V_RESULT;

END;



------------------------------------------------------------------------------------------------------------------
--                                     ○ PROCEDURE - 숙소, 관련내용삭제
------------------------------------------------------------------------------------------------------------------

-- 숙소문의 지우기위한 뷰 테이블
CREATE OR REPLACE VIEW VIEW_QSTDEL
AS
SELECT RQST.RQSTCODE"RQSTCODE", RQST.RCODE"RCODE", HRQST.RQSTCODE"HRQSTCODE"
FROM TBL_ROOMQUESTION RQST LEFT JOIN TBL_RQSTANSWER RQSTA
ON RQST.RQSTCODE = RQSTA.RQSTCODE LEFT JOIN TBL_HIDEROOMQUESTION HRQST
ON RQST.RQSTCODE = HRQST.RQSTCODE;

-- 검증지우기위한 뷰 테이블
CREATE OR REPLACE VIEW VIEW_VERDEL
AS
SELECT REQVER.RCODE"RCODE", REQVER.REQVCODE"REQVCODE", VER.VCODE"VCODE", VERR.VRCODE"VRCODE"
FROM TBL_REQVERIFICATION REQVER LEFT JOIN TBL_VERIFICATION VER
ON REQVER.REQVCODE = VER.REQVCODE LEFT JOIN TBL_VERIFICATIONRESULT VERR
ON VER.VCODE =VERR.VCODE;

-- 후기지우기위한 뷰 테이블   
CREATE OR REPLACE VIEW VIEW_REVDEL
AS
SELECT E.REVANSCODE"REVANSCODE", E.RCODE"RCODE", E.REVTITLE"REVTITLE", E.REVCONTENT"REVCONTENT", E.MEMCODE"MEMCODE", E.REGDATE"REGDATE"
     , E.HCODE"HCODE", (SELECT MEMETIQUETTE FROM TBL_MEMBER WHERE MEMCODE = E.MEMCODE)"GMEMETIQUETTE"
     , (SELECT MEMID FROM TBL_MEMBER WHERE MEMCODE = E.HCODE)"HID", E.HIDEREVCODE"HIDEREVCODE", E.REVANSDATE"REVANSDATE", E.REVANS"REVANS"
     , E.HIDECAUSE"HIDECAUSE", E.HIDEDATE"HIDEDATE", E.ADMINCODE"ADMINCODE", E.ADMINID"ADMINID"
     , E.ADMINNAME"ADMINNAME", E.REALCHECKINDATE"REALCHECKINDATE", E.REALCHECKOUTDATE"REALCHECKOUTDATE", E.ULISTREGDATE"ULISTREGDATE"
     , E.CHECKINDATE"CHECKINDATE", E.CHECKOUTDATE"CHECKOUTDATE"
     , (SELECT MEMID FROM TBL_MEMBER WHERE MEMCODE = E.MEMCODE)"GID", E.REVIMGCODE"REVIMGCODE", E.REVCODE"REVCODE", E.REVIMG"REVIMG"
FROM
(
SELECT RVA.REVANSCODE"REVANSCODE", RMC.RCODE"RCODE", RV.REVTITLE"REVTITLE", RV.REVCONTENT"REVCONTENT", BK.MEMCODE"MEMCODE", RV.REGDATE"REGDATE", RMC.MEMCODE"HCODE"
     , HRV.HIDEREVCODE"HIDEREVCODE", RVA.REVANSDATE"REVANSDATE", RVA.REVANS"REVANS", HRV.HIDECAUSE"HIDECAUSE", HRV.HIDEDATE"HIDEDATE", AD.ADMINCODE"ADMINCODE", AD.ADMINID"ADMINID"
     , AD.ADMINNAME"ADMINNAME", UL.REALCHECKINDATE"REALCHECKINDATE", UL.REALCHECKOUTDATE"REALCHECKOUTDATE", UL.ULISTREGDATE"ULISTREGDATE"
     , BK.CHECKINDATE"CHECKINDATE", BK.CHECKOUTDATE"CHECKOUTDATE", RVIMG.REVIMGCODE"REVIMGCODE", RV.REVCODE"REVCODE", RVIMG.REVIMG"REVIMG"
FROM TBL_REVIEW RV LEFT JOIN TBL_REVIEWANSWER RVA
  ON RV.REVCODE = RVA.REVCODE LEFT JOIN TBL_HIDEREVIEW HRV
  ON RV.REVCODE = HRV.REVCODE LEFT JOIN TBL_ADMIN AD
  ON HRV.ADMINCODE = AD.ADMINCODE LEFT JOIN TBL_USEDLIST UL
  ON RV.ULISTCODE = UL.ULISTCODE LEFT JOIN TBL_BOOKING BK
  ON UL.BCODE = BK.BCODE LEFT JOIN TBL_BOOKABLEDATE BAD
  ON BK.BADATECODE = BAD.BADATECODE LEFT JOIN TBL_ROOMCODE RMC
  ON BAD.RCODE = RMC.RCODE LEFT JOIN TBL_MEMBERCODE MEMC
  ON RMC.MEMCODE = MEMC.MEMCODE LEFT JOIN TBL_MEMBER MEM
  ON MEMC.MEMCODE = MEM.MEMCODE LEFT JOIN TBL_REVIEWIMAGE RVIMG
  ON RV.REVCODE = RVIMG.REVCODE
) E;



CREATE OR REPLACE PROCEDURE PROC_DELROOM (P_RCODE IN TBL_ROOMCODE.RCODE%TYPE) 
IS
    V_TEMP        NUMBER; 
    V_NUM1         NUMBER   :=1; --숙소문의답글 삭제 쿼리
    V_NUM2         NUMBER   :=1; --숙소문의숨김삭제
    V_NUM3         NUMBER   :=1; --검증처리정보 삭제
    V_NUM4         NUMBER   :=1; --  검증이력 삭제
    V_NUM5         NUMBER   :=1; -- 후기 이미지파일 제거
    V_NUM6         NUMBER   :=1; -- 숨김후기제거
    V_NUM7         NUMBER   :=1; --후기답변 삭제
    V_NUM8         NUMBER   :=1; -- 후기 삭제
BEGIN    

    --편의사항 삭제 쿼리
    DELETE
    FROM TBL_ROOMCONVENIENCE
    WHERE RCODE = P_RCODE;
   
    
    --제한사항 삭제 쿼리
    DELETE 
    FROM TBL_ROOMCONSTRAINT
    WHERE RCODE = P_RCODE;
    
    
    --찜내역 삭제 쿼리
    DELETE
    FROM TBL_LIKE
    WHERE RCODE = P_RCODE;
    
    --숙소문의답글 삭제 쿼리
    SELECT MAX(RQSTCODE) INTO V_TEMP
    FROM TBL_ROOMQUESTION;
    
    
    LOOP
        DELETE
        FROM TBL_RQSTANSWER
        WHERE RQSTCODE = (SELECT RQSTCODE
                          FROM VIEW_QSTDEL
                          WHERE RCODE = P_RCODE AND RQSTCODE=V_NUM1);
        EXIT WHEN V_NUM1 >= V_TEMP;
        V_NUM1 := V_NUM1 +1; 
    END LOOP;
    
    --숙소문의숨김삭제
    SELECT MAX(RQSTCODE) INTO V_TEMP 
    FROM TBL_ROOMQUESTION;
    
    
    LOOP
        DELETE
        FROM TBL_HIDEROOMQUESTION
        WHERE RQSTCODE = (SELECT HRQSTCODE
                          FROM VIEW_QSTDEL
                          WHERE RCODE =P_RCODE AND RQSTCODE=V_NUM2);
        --RCODE와 RQSTCODE가 ?로 값을 받을 값
        EXIT WHEN V_NUM2 >= V_TEMP;
        V_NUM2 := V_NUM2 +1; 
    END LOOP;
    
    --숙소문의삭제쿼리
    DELETE
    FROM TBL_ROOMQUESTION
    WHERE RCODE = P_RCODE;
    
    --검증처리정보 삭제
    SELECT MAX(VRCODE) INTO V_TEMP
    FROM TBL_VERIFICATIONRESULT;
    
    LOOP
        DELETE
        FROM TBL_VERIFICATIONRESULT
        WHERE VCODE = ( SELECT VCODE
                        FROM VIEW_VERDEL
                        WHERE RCODE = P_RCODE AND VRCODE =V_NUM3 
                      );
        EXIT WHEN V_NUM3 >= V_TEMP;
        V_NUM3 := V_NUM3 +1;
    END LOOP;
    
    
    --  검증이력 삭제
    SELECT MAX(VCODE) INTO V_TEMP
    FROM TBL_VERIFICATION;
    
    LOOP
        DELETE
        FROM TBL_VERIFICATION
        WHERE REQVCODE = ( SELECT REQVCODE
                           FROM VIEW_VERDEL
                           WHERE RCODE = P_RCODE AND VCODE = V_NUM4 
                         );
        EXIT WHEN V_NUM4 >= V_TEMP;                  
        V_NUM4 := V_NUM4 +1;
    END LOOP;
    
    
    -- 검증신청 제거
    DELETE
    FROM TBL_REQVERIFICATION
    WHERE RCODE = P_RCODE;
   
    -- 후기 이미지파일 제거
    SELECT MAX(REVIMGCODE) INTO V_TEMP
    FROM TBL_REVIEWIMAGE;
    
    LOOP
        DELETE
        FROM TBL_REVIEWIMAGE
        WHERE REVCODE = ( SELECT REVCODE
                         FROM VIEW_REVDEL
                         WHERE RCODE =P_RCODE AND REVIMGCODE =V_NUM5
                       );
                       
        EXIT WHEN V_NUM5 >= V_TEMP;
        V_NUM5 := V_NUM5 +1;

    END LOOP;        
    
    -- 숨김후기제거
    SELECT MAX(HIDEREVCODE) INTO V_TEMP
    FROM TBL_HIDEREVIEW;
    
    LOOP
        DELETE
        FROM TBL_HIDEREVIEW
        WHERE REVCODE = ( SELECT REVCODE
                          FROM VIEW_REVDEL
                          WHERE RCODE =P_RCODE AND HIDEREVCODE = V_NUM6
                        );
        EXIT WHEN V_NUM6 >= V_TEMP;
        V_NUM6 := V_NUM6 +1;                
    END LOOP;
    
    --후기답변 삭제
    SELECT MAX(REVANSCODE) INTO V_TEMP
    FROM TBL_REVIEWANSWER;
    
    LOOP
        DELETE
        FROM TBL_REVIEWANSWER
        WHERE REVCODE = ( SELECT REVCODE
                          FROM VIEW_REVDEL
                          WHERE RCODE =P_RCODE AND REVANSCODE = V_NUM7
                        );
        EXIT WHEN V_NUM7 >= V_TEMP;
        V_NUM7 := V_NUM7 +1;  

    END LOOP;
    -- 후기 삭제
    SELECT MAX(REVCODE) INTO V_TEMP
    FROM TBL_REVIEW;
    
     LOOP
        DELETE
        FROM TBL_REVIEW
        WHERE REVCODE = ( SELECT REVCODE
                          FROM VIEW_REVDEL
                          WHERE RCODE =P_RCODE AND REVCODE = V_NUM8
                        );
        EXIT WHEN V_NUM8 >= V_TEMP;
        V_NUM8 := V_NUM8 +1;  
     END LOOP;  
     
    --숙소삭제 쿼리
    DELETE
    FROM TBL_ROOM
    WHERE RCODE = P_RCODE;
    
    -- 커밋
    COMMIT;
 
END;

EXECUTE PROC_DELROOM(3);

ROLLBACK;
------------------------------------------------------------------------------------------------------------------
--                                        ○ PROCEDURE - 회원탈퇴처리
------------------------------------------------------------------------------------------------------------------
--DROP PROCEDURE PRO_LEAVEMEMBER;
--DROP PROCEDURE P_LEAVEMEMBER;

--○ 회원탈퇴 PROCEDURE (PROC_LEAVEMEMBER)
CREATE OR REPLACE PROCEDURE PROC_LEAVEMEMBER (P_MEMCODE IN TBL_MEMBER.MEMCODE%TYPE) --탈퇴신청한 회원코드
IS
    --탈퇴신청한 회원의 현재 레코드 선언
    V_MEMCODE       TBL_MEMBER.MEMCODE%TYPE;
    V_MEMID         TBL_MEMBER.MEMID%TYPE;
    V_MEMPW         TBL_MEMBER.MEMPW%TYPE;
    V_MEMNAME       TBL_MEMBER.MEMNAME%TYPE;
    V_MEMSSN        TBL_MEMBER.MEMSSN%TYPE;
    V_MEMTEL        TBL_MEMBER.MEMTEL%TYPE;
    V_MEMEMAIL      TBL_MEMBER.MEMEMAIL%TYPE;
    V_MEMETIQUETTE  TBL_MEMBER.MEMETIQUETTE%TYPE;
    V_MEMPROFILE    TBL_MEMBER.MEMPROFILE%TYPE;
    V_MEMJOINDATE   TBL_MEMBER.MEMJOINDATE%TYPE;

BEGIN
    --기존 회원 테이블 정보 가져와 담기
    SELECT MEMCODE, MEMID, MEMPW, MEMNAME, MEMSSN, MEMTEL, MEMEMAIL
         , MEMETIQUETTE, MEMPROFILE, MEMJOINDATE
    INTO V_MEMCODE, V_MEMID, V_MEMPW, V_MEMNAME, V_MEMSSN, V_MEMTEL, V_MEMEMAIL
         , V_MEMETIQUETTE, V_MEMPROFILE, V_MEMJOINDATE
    FROM TBL_MEMBER
    WHERE MEMCODE=P_MEMCODE;

    --탈퇴 회원 테이블 입력 쿼리
    INSERT INTO TBL_LEAVEMEMBER(LMEMCODE, MEMCODE, LMEMID, LMEMPW, LMEMNAME, LMEMSSN, LMEMTEL
           , LMEMEMAIL, LMEMETIQUETTE, LMEMPROFILE, LMEMJOINDATE, LDATE)
    VALUES(SEQLEAVEMEMBER.NEXTVAL, V_MEMCODE, V_MEMID, V_MEMPW, V_MEMNAME, V_MEMSSN, V_MEMTEL
           , V_MEMEMAIL, V_MEMETIQUETTE, V_MEMPROFILE, V_MEMJOINDATE, SYSDATE);

    --삭제 쿼리
    DELETE
    FROM TBL_MEMBER
    WHERE MEMCODE = P_MEMCODE;
    
    --커밋
    COMMIT;
END;
--○ 회원 탈퇴 처리 쿼리문 쓰는법
--EXECUTE FN_LEAVEMEMBER(7);

